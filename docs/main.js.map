{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/countries/countries.component.ts","./src/app/components/countries/countries.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dashboard-card/dashboard-card.component.ts","./src/app/components/dashboard-card/dashboard-card.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/data-service.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","// import { Component, OnInit } from '@angular/core';\r\n// import { DataServiceService } from '../../services/data-service.service';\r\n// @Component({\r\n//   selector: 'app-home',\r\n//   templateUrl: './home.component.html',\r\n//   styleUrls: ['./home.component.css']\r\n// })\r\n// export class HomeComponent implements OnInit {\r\n//   constructor(private dataService :DataServiceService) { }\r\n\r\n//   ngOnInit(): void {\r\n//     this.dataService.getGlobalData().subscribe(\r\n//       {\r\n//         next:(result)=>{\r\n//       console.log(result);\r\n//         }\r\n//     })\r\n//      }\r\n// }\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DataServiceService } from '../../services/data-service.service';\r\nimport {GlobalDataSummary} from '../../models/global-data';\r\nimport {formatNumber} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\nglobalData: GlobalDataSummary[];\r\ndatatable=[];\r\nchart={\r\nPieChart:'PieChart',\r\nColumnChart:'ColumnChart',\r\nheight:500,\r\noptions: {  \r\n  animation:{\r\n  duration: 1000,\r\n  easing: 'out',\r\n},\r\nis3D:true\r\n}\r\n}\r\ntotalConfirmed=0;\r\ntotalActive=0;\r\ntotalRecovered=0;\r\ntotalDeath=0;\r\n  constructor(private dataService : DataServiceService) { }\r\n  updateChart(input:HTMLInputElement)\r\n      {\r\n        console.log(input.value);\r\n        this.initChart(input.value)\r\n      }\r\n\r\n\r\ninitChart(caseType:string){\r\n  \r\n  // this.datatable.push([\"Country\",\"Cases\"])\r\n  this.datatable=[];\r\n  this.globalData.forEach(cs=>{\r\n    let value:number;\r\n    if(caseType=='c')\r\n       if(cs.confirmed>2000)\r\n         value=cs.confirmed\r\n    if(caseType=='d')\r\n      if(cs.deaths>1000)\r\n         value=cs.deaths\r\n    if(caseType=='r')\r\n      if(cs.recovered>2000)\r\n          value=cs.recovered\r\n    if(caseType=='a')  \r\n         if(cs.active>2000)\r\n         value=cs.active\r\n    this.datatable.push([\r\ncs.country,value\r\n\r\n    ])\r\n  })\r\n   console.log(this.datatable);\r\n// this.pieChart = {\r\n//     chartType: 'PieChart',\r\n}\r\n  ngOnInit(): void {\r\n   \r\n    this.dataService.getGlobalData().\r\n    subscribe(\r\n  result=>{\r\n        console.log(result);\r\n        this.globalData=result;\r\n        result.forEach(cs => {\r\n          if(!Number.isNaN(cs.confirmed))\r\n          {\r\n          this.totalActive+=cs.active;\r\n          this.totalConfirmed+=cs.confirmed;\r\n          this.totalDeath+=cs.deaths;\r\n          this.totalRecovered+=cs.recovered;\r\n          }\r\n          //console.log(this.totalConfirmed);\r\n        })\r\n        this.initChart('c');\r\n      })\r\n          }\r\n            }\r\n\r\n","<div style=\"background-color:#19143E\">\r\n<div class =\"jumbotron text-center\" style=\" background-color:#19143E\">\r\n    <h1 class=\"dispaly-4\" style=\"color:white\">Corona Covid-19 tracker</h1>\r\n</div>\r\n    <hr>\r\n    <app-dashboard-card [totalConfirmed]='totalConfirmed' [totalActive]='totalActive' [totalRecovered]='totalRecovered' [totalDeath]='totalDeath'></app-dashboard-card>\r\n    <hr>\r\n    <div class=\"ui form\">\r\n      <div class=\"inline fields\">\r\n        <label for=\"casetype\" class=\"radio-inline\" style=\"margin:10px;color:white\">Select Case Type:</label>\r\n            <input type=\"radio\" value='c' id='c' #c (click)='updateChart(c)' name=\"casetype\" checked=\"\" tabindex=\"0\" class=\"hidden\">\r\n            <label  for='c' style=\"margin:10px ;color:white \">Confirmed</label>\r\n            <input type=\"radio\" value='d'  id='d' #d (click)='updateChart(d)'name=\"casetype\" tabindex=\"0\" class=\"hidden\">\r\n            <label for='d'  class=\"radio-inline\" style=\"margin:10px;color:white\">Deaths</label>\r\n            <input type=\"radio\"  value='r' id='r' #r (click)='updateChart(r)' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\r\n            <label  for='r' style=\"margin:10px;color: white;\">Recovered</label>\r\n            <input type=\"radio\" value='a' id='a'  #a (click)='updateChart(a)' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\r\n            <label for ='a' style=\"margin:10px;color: white;\">Active</label>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n\r\n          <google-chart [type]='chart.PieChart' [data]='datatable' [options]='chart.options' style=\"width:100%;\" [height]='chart.height'></google-chart>\r\n\r\n        </div>\r\n          <div class=\"col-md-6\">\r\n            <google-chart [type]='chart.ColumnChart'  [height]='chart.height' [options]='chart.options'  style=\"width:100%;\"style=\"width:100%;\" [data]='datatable'></google-chart>\r\n      </div>\r\n      </div>\r\n    \r\n    \r\n   ","import { Component, OnInit } from '@angular/core';\r\nimport { DataServiceService } from 'src/app/services/data-service.service';\r\nimport { GlobalDataSummary } from 'src/app/models/global-data';\r\nimport { DateWiseData } from 'src/app/models/date-wise-data';\r\nimport { merge } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-countries',\r\n  templateUrl: './countries.component.html',\r\n  styleUrls: ['./countries.component.css']\r\n})\r\nexport class CountriesComponent implements OnInit {\r\n\r\n  data : GlobalDataSummary[];\r\n  countries : string[] = [];\r\n  totalConfirmed = 0;\r\n  totalActive = 0;\r\n  totalDeaths = 0;\r\n  totalRecovered = 0;\r\n  selectedCountryData : DateWiseData[]; \r\n  dateWiseData ;\r\n   dataTable = [];\r\n   chart={\r\n    LineChart:'LineChart',\r\n    height:500,\r\n    options: {  \r\n      animation:{\r\n      duration: 1000,\r\n      easing: 'out',\r\n    },\r\n    is3D:true\r\n    }\r\n    }\r\n  \r\n \r\n  constructor(private service : DataServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    merge(\r\n      this.service.getDateWiseData().pipe(\r\n        map(result=>{\r\n          this.dateWiseData = result;\r\n        })\r\n      ), \r\n      this.service.getGlobalData().pipe(map(result=>{\r\n        this.data = result;\r\n        this.data.forEach(cs=>{\r\n          this.countries.push(cs.country)\r\n        })\r\n      }))\r\n    ).subscribe(\r\n      {\r\n        complete : ()=>{\r\n         this.updateValues('India')\r\n        }\r\n      }\r\n    )\r\n    \r\n    \r\n\r\n  }\r\n\r\n  updateChart(){\r\n    this.dataTable=[];\r\n  //  this.dataTable.push([\"Date\" , 'Cases'])\r\n    this.selectedCountryData.forEach(cs=>{\r\n     this. dataTable.push([cs.date , cs.cases])\r\n    })\r\n  }\r\n\r\n  updateValues(country : string){\r\n    console.log(country);\r\n    this.data.forEach(cs=>{\r\n      if(cs.country == country){\r\n        this.totalActive = cs.active\r\n        this.totalDeaths = cs.deaths\r\n        this.totalRecovered = cs.recovered\r\n        this.totalConfirmed = cs.confirmed\r\n      }\r\n    })\r\n\r\n    this.selectedCountryData  = this.dateWiseData[country.toString()]\r\n    console.log(this.selectedCountryData);\r\n    this.updateChart();\r\n    \r\n  }\r\n\r\n}\r\n","    <!-- <div class=\"ui inverted dimmer\" [class.active]='loading'>\r\n    </div> -->\r\n    <div style=\"background-color:#19143E\">\r\n        <div class=\"jumbotron bg-black text-center\" style=\"background-color:#19143E\">\r\n    <h1 class=\"text-center\"  style=\"color:white;\"> Corona covid 19 tracker Country wise</h1>\r\n</div>\r\n<hr>\r\n<div class=\"mx-auto\">\r\n    <div class=\"form-group col-lg-5 mx-auto\">\r\n        <label for=\"c\" style=\"color:white; font-size:12px\">Select Country</label>\r\n        <select name=\"\"class=\"form-control\" id=\"c\" #input (change)=\"updateValues(input.value)\">\r\n            <option value=\"{{con}}\" *ngFor='let con of countries'>{{con}}</option>\r\n        </select>\r\n    </div>\r\n    <app-dashboard-card [totalConfirmed]='totalConfirmed' [totalActive]='totalActive' [totalRecovered]='totalRecovered' [totalDeath]='totalDeaths'></app-dashboard-card>\r\n\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col md-6\">\r\n        <table class=\"table col\"> \r\n            <thead>\r\n                <tr style=\"background-color:#5B1859\">\r\n                    <th style=\"text-align:center;color:white\">SNo</th>\r\n                    <th style=\"text-align:center;color:white\"> Date</th>\r\n                    <th style=\"text-align:center;color:white\"> Cases</th>\r\n    \r\n                </tr>\r\n                    </thead>\r\n            <tbody style=\"background-color:black\">\r\n                <tr *ngFor='let cs of selectedCountryData; index as i' >\r\n                <td style=\"text-align:center;color:white\">{{i+1}}</td>\r\n                <td style=\"text-align:center;color:white\">{{cs.date|date}}</td>\r\n                <td style=\"text-align:center;color:white\">{{cs.cases}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    \r\n    </div>\r\n\r\n    <div class=\"col md-6\">\r\n    <h3 style=\"color:white;text-align: \r\n       center;\">Cases Date Wise</h3>\r\n              <google-chart [type]='chart.LineChart' [data]='dataTable' style=\"width:100%;\"  [options]='chart.options' [height]='chart.height'></google-chart>\r\n              </div>\r\n    </div>\r\n    </div>\r\n+\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'project2';\r\n  // constructor(private  oauthService: OAuthService){}\r\n\r\n  // private async ConfigureAuth():Promise<void>{\r\n  // this.oauthService.loginUrl='https://login.microsoftonline.com/9ec57533-cbc1-43fd-9e10-3579b719e953/oauth2/v2.0/authorize';\r\n  // this.oauthService.clientId='a50f8c1d-8dbd-4c2a-b74b-e349b28755aa';\r\n  //  this.oauthService.resource=''; \r\n  // this.oauthService.logoutUrl=''; \r\n  // this.oauthService.redirectUri= window.location.origin+'/'; \r\n  // this.oauthService.scope= 'openid';\r\n  // this.oauthService.oidc=true;\r\n  // this.oauthService.setStorage(sessionStorage);\r\n  // }\r\n  // async ngOnInit(){\r\n  //   await this.ConfigureAuth();\r\n  //   this.oauthService.tryLogin({});\r\n  //   if(!this.oauthService.getAccessToken()){\r\n  //     await this.oauthService.initImplicitFlow();\r\n  //   }\r\n  //   console.log(this.oauthService.getAccessToken());\r\n  // }\r\n}\r\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { CountriesComponent } from './components/countries/countries.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { DashboardCardComponent } from './components/dashboard-card/dashboard-card.component';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { GoogleChartsModule } from 'angular-google-charts';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    CountriesComponent,\r\n    NavbarComponent,\r\n    DashboardCardComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    GoogleChartsModule,\r\n    MDBBootstrapModule.forRoot(),\r\n\r\n\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-card',\r\n  templateUrl: './dashboard-card.component.html',\r\n  styleUrls: ['./dashboard-card.component.css']\r\n})\r\nexport class DashboardCardComponent implements OnInit {\r\n  @Input('totalConfirmed')\r\n  totalConfirmed;\r\n  @Input('totalRecovered')\r\n  totalRecovered;\r\n  @Input('totalActive')\r\n  totalActive;\r\n  @Input('totalDeath')\r\n  totalDeath;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"card col p-4 m-4 \" style=\"background-color:#1371A5\">\r\n      <div class=\"ui statistic\">\r\n       <h5 style=\"text-align:center;color:white\">Confirmed</h5>\r\n        <h3 style=\"text-align:center;color:white\"> {{totalConfirmed | number}}</h3>\r\n    </div>\r\n  </div>\r\n  <div class=\"card col p-4 m-4 \" style=\"background-color:#6D469B\">\r\n    <div class=\"ui statistic\">\r\n      \r\n       <h5 style=\"text-align:center;color:white\">Active</h5> \r\n      \r\n      <h3 style=\"text-align:center;color:white\">\r\n        {{totalActive| number}}\r\n      </h3>\r\n  </div>\r\n  </div>\r\n        <div class=\"card col p-4 m-4\"  style=\"background-color:#3C7C76\">\r\n      <div class=\"ui statistic\">\r\n        <h5 style=\"text-align:center;color:white\">Recovered</h5>\r\n    \r\n       <h3 style=\"text-align:center;color:white\">{{totalRecovered | number}}</h3>\r\n      </div>\r\n    </div>\r\n        <div class=\"card col p-4 m-4\" style=\"background-color:#B74B60;\">\r\n      <div class=\"ui statistic\">\r\n        <h5 style=\"text-align:center;color:white\"> Death</h5>\r\n      <h3 style=\"text-align:center;color:white\">{{totalDeath | number}}</h3>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n   <!-- // <a class=\"navbar-brand\" routerLink=\"/\">CORONA COVID-19 TRACKER</a> -->\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link waves-light\" routerLink=\"/\">Home <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link waves-light\" routerLink=\"countries\">Countries</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n  <!--Navbar-->\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClientModule, HttpClient} from '@angular/common/http';\r\nimport {GlobalDataSummary} from '../models/global-data';\r\nimport {DateWiseData} from '../models/date-wise-data';\r\nimport{map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataServiceService {\r\nprivate globalDataUrl='https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\r\nprivate extension='.csv';\r\nmonth;\r\ndate;\r\nyear ;\r\ngetDate(date:number){\r\nif(date<10){\r\nreturn '0'+date;}\r\nreturn date;\r\n}\r\nprivate dateWiseDataUrl=\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\";\r\n///github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\";\r\n  constructor(private http:HttpClient) { \r\nlet now = new Date();\r\nthis.month=now.getMonth();\r\nthis.year=now.getFullYear();\r\nthis.date =now.getDate();\r\nconsole.log(\r\n{date:this.date,\r\n  month:this.month,\r\n  year:this.year\r\n  });\r\nthis.globalDataUrl=this.globalDataUrl+this.getDate(this.month)+'-'+this.getDate(this.date)+'-'+this.year+this.extension;\r\nconsole.log(this.globalDataUrl);\r\n  }\r\n// access data date wise  \r\n  getDateWiseData(){\r\n    return this.http.get(this.dateWiseDataUrl,{responseType:'text'}).pipe(\r\n      map(result=>{\r\n        let rows=result.split('\\n');\r\n//console.log(rows);\r\nlet mainData={};\r\nlet header=rows[0];\r\nlet dates=header.split(/,(?=\\S)/);\r\ndates.splice(0,4); // to access only dates\r\nrows.splice(0,1);// to remove heaader section from data \r\nrows.forEach(row=>{\r\n  let cols=row.split(/,(?=\\S)/) // access data values\r\n  let con=cols[1];     // to acess country  values\r\ncols.splice(0,4);       // to access only dates\r\nmainData[con]=[];  // generate a key pair basis on country\r\ncols.forEach((value , index)=>{\r\n  let dw :DateWiseData={\r\n    cases: +value  ,\r\n    country :  con,\r\n    date : new Date (Date.parse(dates[index]))\r\n  }\r\n  mainData[con].push(dw)\r\n  })\r\n})\r\n//console.log(mainData);\r\nreturn mainData;\r\n}))\r\n}  \r\ngetGlobalData()\r\n{\r\n\r\n  return this.http.get(this.globalDataUrl,{responseType:'text'}).pipe(\r\n    map(result=>{\r\n      // to merge all the values into a single  and remove redundancy\r\n     // create a object  of type globalDataSummary  for assign and store  a key value pair \r\n      let data : GlobalDataSummary[]=[];\r\n      let raw={} \r\n      let row={}\r\n      let rows=result.split(\"\\n\");\r\n      rows.splice(0,1);\r\n      // to remove header row and start the array from 1 index\r\n      rows.forEach(row=>{\r\n        let cols=row.split(/,(?=\\S)/) // this regular expression is to consider all the names which are seperated with comma as a single name\r\n\r\n\r\n\r\n        // create a object for globaldatasummary\r\n       let  cs={\r\n        country : cols[3],\r\n        confirmed : +cols[7],\r\n        deaths : +cols[8],\r\n        recovered : +cols[9],\r\n        active : +cols[10] //  + to convert the data into number\r\n        }\r\n        let temp:GlobalDataSummary = raw[cs.country];\r\n        if(temp)\r\n        {\r\n          temp.confirmed=temp.confirmed+cs.confirmed;\r\n          temp.active=temp.active+cs.active;\r\n          temp.deaths=temp.deaths+cs.deaths;\r\n          temp.recovered=temp.recovered+cs.recovered;\r\n          raw[cs.country]=temp;\r\n        }\r\n        else\r\n         raw[cs.country]=cs;\r\n       \r\n\r\n      //   console.log (cs.deaths);\r\n\r\n// data.push({\r\n \r\n// })\r\n      //console.log(cols);\r\n       //console.log(data);\r\n      })\r\n     \r\n  return <GlobalDataSummary[]>Object.values(raw);\r\n// to return only values not key\r\n  // typecast the value to globalData summary\r\n}\r\n      ))\r\n\r\n  }\r\n  }","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {HomeComponent} from './components/home/home.component';\r\nimport{CountriesComponent} from './components/countries/countries.component';\r\nconst routes: Routes = [\r\n  {path:'', component :HomeComponent},\r\n  {path:'countries', component :CountriesComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}